// @allure.label.story=Namespcae_story
// @allure.label.suite=NamespaceTesting
// @allure.label.owner=Kuvonch



var space = pm.response.json();
pm.test("Shoult return an object", () =>  {
  pm.expect(space).to.be.an("object");
})
console.log(space)
pm.test('Schema is valid', function () {

const schema = {
  "type": "object",
  "properties": {
    "id": {"type": "string"},
    "name": {"type": "string"},
    "description": {"type": "string"},
    "createdAt": {"type": "string"},
    "createdBy": {
        "type": ["string", "null"]
    },
    "lastModifiedAt ": {"type": "string"}, 
    "lastModifiedBy": {
        "type": ["string", "null"]
    }
  }
};
pm.response.to.have.jsonSchema(schema);
});

pm.test("Name should be equal to FirstSpace", () => {
  var dynamicName = pm.environment.get("dynamicName");
  pm.expect(space.name).to.equal(dynamicName);
});

